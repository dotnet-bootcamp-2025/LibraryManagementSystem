// <auto-generated />
using System;
using LibraryApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryApp.Infrastructure.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20251010233058_AddMembershipDatesToMember")]
    partial class AddMembershipDatesToMember
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("LibraryApp.Domain.Entities.BorrowedItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BorrowDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("ExpirationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("DATE(CURRENT_TIMESTAMP, '+3 days')");

                    b.Property<int>("LibraryItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MemberId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LibraryItemId");

                    b.HasIndex("MemberId");

                    b.ToTable("BorrowedItems");
                });

            modelBuilder.Entity("LibraryApp.Domain.Entities.LibraryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsBorrowed")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IssueNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Pages")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Publisher")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("LibraryItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Author = "F. Scott Fitzgerald",
                            IsBorrowed = false,
                            Pages = 180,
                            Title = "The Great Gatsby",
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Author = "George Orwell",
                            IsBorrowed = false,
                            Pages = 328,
                            Title = "1984",
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            IsBorrowed = false,
                            IssueNumber = 7,
                            Publisher = "Time USA LLC",
                            Title = "Time Magazine - July 2023",
                            Type = 2
                        });
                });

            modelBuilder.Entity("LibraryApp.Domain.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Alice Johnson",
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2026, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bob Smith",
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Charlie Brown",
                            StartDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LibraryApp.Domain.Entities.BorrowedItem", b =>
                {
                    b.HasOne("LibraryApp.Domain.Entities.LibraryItem", "LibraryItem")
                        .WithMany("BorrowedItems")
                        .HasForeignKey("LibraryItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Domain.Entities.Member", "Member")
                        .WithMany("BorrowedItems")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LibraryItem");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("LibraryApp.Domain.Entities.LibraryItem", b =>
                {
                    b.Navigation("BorrowedItems");
                });

            modelBuilder.Entity("LibraryApp.Domain.Entities.Member", b =>
                {
                    b.Navigation("BorrowedItems");
                });
#pragma warning restore 612, 618
        }
    }
}
